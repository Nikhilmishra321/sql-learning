---------------------AGENDA------------

JOINS 

UNIONS

CREATE TABLE course (
    course_id SERIAL PRIMARY KEY,
    course_name VARCHAR(50) NOT NULL,
    instructor VARCHAR(50)
);

INSERT INTO course (course_name, instructor)
VALUES 
    ('Data Science', 'Dr. Smith'),
    ('Mathematics', 'Prof. White'),
    ('Computer Science', 'Dr. Brown'),
    ('Physics', 'Dr. Taylor'),
    ('Chemistry', 'Prof. Green');

select * from course	


CREATE TABLE student (
    student_id SERIAL PRIMARY KEY,
    student_name VARCHAR(50) NOT NULL,
    course_id INT,
    enrollment_date DATE,
    FOREIGN KEY (course_id) REFERENCES course(course_id)
);


INSERT INTO student (student_name, course_id, enrollment_date)
VALUES 
    ('Alice', 1, '2024-01-10'),
    ('Bob', 2, '2024-01-15'),
    ('Charlie', 1, '2024-01-20'),
    ('David', 3, '2024-01-25'),
    ('Eva', NULL, '2024-02-01'),   -- Eva is not enrolled in any course
    ('Frank', 4, '2024-02-05'),
    ('Grace', 5, '2024-02-10');

select * from student


---INNER JOIN----

select course.course_name ,course.instructor ,student.student_name 
from course INNER JOIN  student ON  course.course_id = student.course_id;

---LEFT JOIN -------

select course.course_name ,course.instructor ,student.student_name 
from course left JOIN  student ON  course.course_id = student.course_id;


SELECT student.student_name, course.course_name, course.instructor
FROM student
LEFT JOIN course ON student.course_id = course.course_id;


----Right Join ------

select course.course_name ,course.instructor ,student.student_name 
from course RIGHT JOIN  student ON  course.course_id = student.course_id;

-------FULL JOIN ---------

select course.course_name ,course.instructor ,student.student_name 
from course FULL JOIN  student ON  course.course_id = student.course_id;


SELECT student.student_name, course.course_name, course.instructor
FROM student
FULL OUTER JOIN course ON student.course_id = course.course_id;


------ 	




